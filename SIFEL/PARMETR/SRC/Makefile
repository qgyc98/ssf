####################################################################
#
#  Makefile for parallel coupled transport-mechanical code PARMETR
#
####################################################################



# the following variable indicates the makefile as the parallel part of code
PARSIFEL = yes



################################################################### 
#  Include default part of Makefile - 
#  compiler definitions, flags, libraries ...
#
include ../../Makefile.in



################################################################### 
#  List of include directories
#
INCLUDES         = ../../GEFEL/:../../GEFEL/PARSER/:../../GEFEL/OPTIM:../../GEFEL/RANDY:../../GEFEL/CMLFILE:../../PARGEF/:../../PARMEF/SRC/:../../PARTRF/SRC/:../../PARMETR/SRC/:../../MEFEL/SRC/:../../TRFEL/SRC/:../../METR/SRC:
#$(MPI_HOME)/include



################################################################### 
#  List of libraries
#

# list of local libraries
LOC_LIBS        =  -lmet -ltrf -lmef -lgef -lpargef -lpmef -lptrf

#LOC_LIBS        = -L/usr/local/mpi/lib -lpmpich -lmpich -L../../MEFEL/SRC -lmef -L../../PARGEF/ -lpargef -L../../GEFEL/ -lgef
#LOC_LIBS        = -L/export/share/linux/mpi/ch_shmem/lib -lmpich  -lpmpich++  -lpmpich   -L../../MEFEL/SRC -lmef -L../../PARGEF/ -lpargef -L../../GEFEL/ -lgef



####################################################################
# List of source files
#
SRCS = pcpcsolver.cpp pmetrinit.cpp ppcsolver.cpp pprobdescc.cpp psolverc.cpp pmetr.cpp



####################################################################
# List of object files
#
OBJS     := $(SRCS:%.cpp=$(OUTPUTPATH)%.o)
MOBJS    := $(OUTPUTPATH)pmetr.o
PMETR    := $(OUTPUTPATH)pmetr
LIBPMETR := $(OUTPUTPATH)libpmetr.a
DEPS     := $(SRCS:%.cpp=$(OUTPUTPATH)%.d) $(MOBJS:%.o=%.d)



####################################################################
#  List of lib files
#

# list of dependent libraries
LIBDEPS  = $(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)libgef.a
LIBDEPS += $(SIFEL_ROOT)$(BIN_ROOT)MEFEL/SRC/$(OUTPUTDIR)libmef.a
LIBDEPS += $(SIFEL_ROOT)$(BIN_ROOT)TRFEL/SRC/$(OUTPUTDIR)libtrf.a
LIBDEPS += $(SIFEL_ROOT)$(BIN_ROOT)METR/SRC/$(OUTPUTDIR)libmet.a
LIBDEPS += $(SIFEL_ROOT)$(BIN_ROOT)PARGEF/$(OUTPUTDIR)libpargef.a
LIBDEPS += $(SIFEL_ROOT)$(BIN_ROOT)PARMEF/SRC/$(OUTPUTDIR)libpmef.a
LIBDEPS += $(SIFEL_ROOT)$(BIN_ROOT)PARTRF/SRC/$(OUTPUTDIR)libptrf.a

# list of paths for dependent libraries
DIR_LIBS  = -L$(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)
DIR_LIBS += -L$(SIFEL_ROOT)$(BIN_ROOT)MEFEL/SRC/$(OUTPUTDIR)
DIR_LIBS += -L$(SIFEL_ROOT)$(BIN_ROOT)TRFEL/SRC/$(OUTPUTDIR)
DIR_LIBS += -L$(SIFEL_ROOT)$(BIN_ROOT)METR/SRC/$(OUTPUTDIR)
DIR_LIBS += -L$(SIFEL_ROOT)$(BIN_ROOT)PARGEF/$(OUTPUTDIR)
DIR_LIBS += -L$(SIFEL_ROOT)$(BIN_ROOT)PARMEF/SRC/$(OUTPUTDIR)
DIR_LIBS += -L$(SIFEL_ROOT)$(BIN_ROOT)PARTRF/SRC/$(OUTPUTDIR) 

#list of all necessary libraries
LIBS	 = $(DIR_LIBS) $(LOC_LIBS) $(SYS_LIBS) 
#${PETSC_C_SH_LIB_PATH} ${PETSC_LIB}



###########################################################################################
#  Following targets will be made regardless of whether there are files with the same names
#
.PHONY : metr parmef partrf



#########################################################################
#  Targets
#
all:  $(PMETR)

$(PMETR): $(LIBDEPS) $(MOBJS) $(OBJS)
	@($(RM) $@)
	@($(RM) ../$@)	
	@(echo "##### Creating PARMETR library . . .")
	@(echo $(AR) $(ARFLAGS) $(OUTPUTPATH)libpmetr.a $(SRCS:%.cpp=$(OUTPUTDIR)%.o))
	@($(AR) $(ARFLAGS) $(OUTPUTPATH)libpmetr.a $(OBJS))
	@(echo "##### PARMETR library was successfully created")
	@(echo "##### Creating pmefel executable . . .")
	$(PCC) -o $@ $(MOBJS) $(EXECFLAGS) -L$(OUTPUTPATH) -lpmetr $(LIBS)
	@(echo "##### pmetr was successfully created")

$(MOBJS): | $(OUTPUTPATH)
$(OBJS):  | $(OUTPUTPATH)

$(OUTPUTPATH):
	@(mkdir -p $(OUTPUTPATH))

$(LIBDEPS) : metr parmef partrf;

clean:    
	@($(RM)  $(PMETR) $(LIBPMETR) $(OBJS) $(DEPS) *~ core)
	@(echo " pmetr was successfully cleaned")

cleanall: $(LIBDEPS)
	@($(RM) -r -f $(addprefix $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH),$(REMOVEDIR)))
	@(echo " pmetr was successfully cleaned")

cleandepall: $(LIBDEPS)
	@($(RM) -r -f $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH))
	@(echo " pmetr was successfully cleaned")



####################################################################
#  List of targets with dependent modules
#
metr:
	+@(cd ../../METR/SRC; make $(MAKECMDGOALS))

parmef: metr
	+@(cd ../../PARMEF/SRC; make $(MAKECMDGOALS))

partrf: parmef
	+@(cd ../../PARTRF/SRC; make $(MAKECMDGOALS))



####################################################################
#  Dependencies generated by compilers
#
-include $(DEPS)



####################################################################
#  Suffix rules
#
$(OUTPUTPATH)%.o : %.cpp
	@export CPATH=$(INCLUDES); \
	echo $(PCC) $(CFLAGS) -c $(<D)/$(<F); \
	$(PCC) $(CFLAGS) $(COMPATFLAGS) $(DEFS) -c $(<D)/$(<F) -o $(@D)/$(@F)
