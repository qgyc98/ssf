################################################################
#
#  Makefile for parallel transport code
# 
################################################################



# the following variable indicates the makefile as the parallel part of code
PARSIFEL = yes



################################################################### 
#  Include default part of Makefile - 
#  compiler definitions, flags, libraries ...
#
include ../../Makefile.in



################################################################### 
#  List of include directories
#
INCLUDES        = ../../TRFEL/SRC/:../../PARGEF/:../../GEFEL/:../../GEFEL/PARSER/:../../GEFEL/OPTIM:../../GEFEL/RANDY:../../GEFEL/CMLFILE



################################################################### 
#  List of libraries
#

# list of local libraries
LOC_LIBS        = -ltrf -lpargef -lgef 



####################################################################
# List of source files
# 
SRCS = pglobalt.cpp pnnpsolvert.cpp pnpsolvert.cpp pprobdesct.cpp psolvert.cpp pspsolvert.cpp ptrfelinit.cpp ptrfel.cpp



####################################################################
# List of object files
#
OBJS         := $(SRCS:%.cpp=$(OUTPUTPATH)%.o)
MOBJS        := $(OUTPUTPATH)ptrfel.o
PTRFEL       := $(OUTPUTPATH)ptrfel
LIBPTRFEL    := $(OUTPUTPATH)libptrf.a
DEPS         := $(SRCS:%.cpp=$(OUTPUTPATH)%.d) $(MOBJS:%.o=%.d)



####################################################################
#  List of lib files
#

# list of dependent libraries
LIBDEPS  = $(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)libgef.a
LIBDEPS += $(SIFEL_ROOT)$(BIN_ROOT)TRFEL/SRC/$(OUTPUTDIR)libtrf.a
LIBDEPS += $(SIFEL_ROOT)$(BIN_ROOT)PARGEF/$(OUTPUTDIR)libpargef.a

# list of paths for dependent libraries
DIR_LIBS  = -L$(SIFEL_ROOT)$(BIN_ROOT)TRFEL/SRC/$(OUTPUTDIR)
DIR_LIBS += -L$(SIFEL_ROOT)$(BIN_ROOT)PARGEF/$(OUTPUTDIR)
DIR_LIBS += -L$(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)

#list of all necessary libraries
LIBS     = $(DIR_LIBS) $(LOC_LIBS) $(SYS_LIBS)

#LIBS = $(DIR_LIBS) $(LOC_LIBS) $(SYS_LIBS) ${PETSC_C_SH_LIB_PATH} ${PETSC_LIB}



###########################################################################################
#  Following targets will be made regardless of whether there are files with the same names
#
.PHONE : trfel pargef



#########################################################################
#  Targets
#
all:  $(PTRFEL)

$(PTRFEL): $(LIBDEPS) $(MOBJS) $(OBJS)
	@($(RM) $@)
	@($(RM) ../$@)	
	@(echo "##### Creating PTRFEL library . . .")
	@(echo $(AR) $(ARFLAGS) $(OUTPUTPATH)libptrf.a $(SRCS:%.cpp=$(OUTPUTDIR)%.o))
	@($(AR) $(ARFLAGS) $(OUTPUTPATH)libptrf.a $(OBJS))
	@(echo "##### PTRFEL library was successfully created")
	@(echo "##### Creating ptrfel executable . . .")
	$(PCC) -o $@ $(MOBJS) $(EXECFLAGS) -L$(OUTPUTPATH) -lptrf $(LIBS)
	@(echo "##### ptrfel was successfully created")

$(MOBJS): | $(OUTPUTPATH)
$(OBJS):  | $(OUTPUTPATH)

$(OUTPUTPATH):
	@(mkdir -p $(OUTPUTPATH))

$(LIBDEPS) : trfel pargef;

clean:    
	@($(RM)  $(PTRFEL) $(LIBPTRFEL) $(OBJS) $(DEPS) *~ core)
	@(echo " ptrfel was successfully cleaned")

cleanall: $(LIBDEPS)
	@($(RM) -r -f $(addprefix $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH),$(REMOVEDIR)))
	@(echo " ptrfel was successfully cleaned")

cleandepall: $(LIBDEPS)
	@($(RM) -r -f $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH))
	@(echo " ptrfel was successfully cleaned")



################################################################
#  List of targets with dependent modules
#
trfel:
	+@(cd ../../TRFEL/SRC; $(MAKE) $(MAKECMDGOALS))

pargef: |trfel
	+@(cd ../../PARGEF; $(MAKE) $(MAKECMDGOALS))



####################################################################
#  Dependencies generated by compilers
#
-include $(DEPS)



####################################################################
#  Suffix rules
#
$(OUTPUTPATH)%.o : %.cpp
	@export CPATH=$(INCLUDES); \
	echo $(PCC) $(CFLAGS) -c $(<D)/$(<F); \
	$(PCC) $(CFLAGS) $(COMPATFLAGS) $(DEFS) -c $(<D)/$(<F) -o $(@D)/$(@F)
