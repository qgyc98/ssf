####################################################################
#
#  Makefile for box girder bridge generator
#
####################################################################



################################################################### 
#  Include default part of Makefile - 
#  compiler definitions, flags, libraries ...
#
include ../../Makefile.in



################################################################### 
#  List of include directories
#
INCLUDES        =../../GEFEL/:../../GEFEL/PARSER/:../../GEFEL/OPTIM:../../GEFEL/RANDY



################################################################### 
#  List of local libraries
#
LOC_LIBS  = -lgef



####################################################################
#  List of source files
#
SRCS =  main.cpp bridgen.cpp quadeq.cpp



################################################################### 
#  List of object files and executables
#
OBJS         = $(SRCS:%.cpp=$(OUTPUTPATH)%.o)
MOBJS        = $(OUTPUTPATH)main.o
BRIDGEN      = $(OUTPUTPATH)bridgen
DEPS         = $(SRCS:%.cpp=$(OUTPUTPATH)%.d) $(MOBJS:%.o=%.d)



####################################################################
#  List of lib files
#

# libraries which BRIDGNE depends on
LIBDEPS  = $(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)libgef.a

# path to directories with needed libraries for the BRIDGEN target
DIR_LIBS = -L$(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)



###########################################################################################
#  Following targets will be made regardless of whether there are files with the same names
#
.PHONY : gefel



####################################################################
#  Targets
#
all:    $(BRIDGEN)


$(BRIDGEN): $(OBJS) $(LIBDEPS) | $(OUTPUTPATH)
	$(CC) -o  $@ $(OBJS) $(EXECFLAGS) $(DIR_LIBS) $(LOC_LIBS) $(SYS_LIBS)
	@(echo -e "\n bridge generator was successfully created\n")

$(OBJS):  | $(OUTPUTPATH)

$(LIBDEPS): gefel;

$(OUTPUTPATH):
	@(mkdir -p $(OUTPUTPATH))

clean:    
	@($(RM)  $(BRIDGEN) $(MOBJS) $(OBJS) $(DEPS) *~ core)
	@(echo " bridgen was successfully cleaned")

cleanall: $(LIBDEPS)
	@($(RM) -r -f $(addprefix $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH),$(REMOVEDIR)))
	@(echo " bridgen was successfully cleaned")

cleandepall: $(LIBDEPS)
	@($(RM) -r -f $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH))
	@(echo " bridgen was successfully cleaned")



####################################################################
#  List of targets with dependent modules
#
gefel:
	@(cd ../../GEFEL; make $(MAKECMDGOALS))



####################################################################
#  Dependencies generated by compilers
#
-include $(DEPS)



####################################################################
#  Suffix rules
#
$(OUTPUTPATH)%.o : %.cpp
	@export CPATH=$(INCLUDES); \
	echo $(CC) $(CFLAGS) $(DEFS) -c $(<D)/$(<F); \
	$(CC) $(CFLAGS) $(COMPATFLAGS) $(DEFS) -c $(<D)/$(<F) -o $(@D)/$(@F)
