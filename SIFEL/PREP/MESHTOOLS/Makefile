####################################################################
#
#  Makefile for mechcode
#
####################################################################



################################################################### 
#  Include default part of Makefile - 
#  compiler definitions, flags, libraries ...
#
include ../../Makefile.in



################################################################### 
#  List of include directories
#
INCLUDES        =../../GEFEL/:../../GEFEL/PARSER/:../../GEFEL/OPTIM:../../GEFEL/RANDY:../../MEFEL/SRC:../../MEFEL/PREP



################################################################### 
#  List of local libraries
#
LOC_LIBS  = -lgef



####################################################################
#  List of source files
#
SRCS =  ansys2sif.cpp connectmeshes.cpp convertor.cpp flsubmesh.cpp gen2d3d.cpp gen3dext.cpp genbridge.cpp meshcomp.cpp mshed-nodren.cpp negjac-nodren.cpp ohybak.cpp t3dtosiffor.cpp 



####################################################################
#  List of object files
#
OBJS         := $(SRCS:%.cpp=$(OUTPUTPATH)%.o)



################################################################### 
#  List of executables
#
MOBJS        := $(SRCS:%.cpp=$(OUTPUTPATH)%)



################################################################### 
#  List of source dependency files
#
DEPS         = $(SRCS:%.cpp=$(OUTPUTPATH)%.d)



####################################################################
#  List of lib files
#

# libraries which preprocessors depends on
LIBDEPS  := $(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)libgef.a
LIBDEPS  += $(SIFEL_ROOT)$(BIN_ROOT)MEFEL/PREP/$(OUTPUTDIR)libmprep.a

# path to directories with needed libraries for the preprocessors target
DIR_LIBS := -L$(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)
DIR_LIBS += -L$(SIFEL_ROOT)$(BIN_ROOT)MEFEL/PREP/$(OUTPUTDIR)



####################################################################
#  Targets
#
.PHONY : generators mechprep

all:    mechprep generators

generators: $(LIBDEPS) $(OBJS) $(MOBJS)
	@(echo "##### meshtools were successfully created")

clean:    
	@($(RM) $(MOBJS) $(OBJS) $(DEPS) *~ core)
	@(echo " meshtools were successfully cleaned")

cleanall: $(LIBDEPS)
	@($(RM) -r -f $(addprefix $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH),$(REMOVEDIR)))
	@(echo " meshtools were successfully cleaned")

cleandepall: $(LIBDEPS)
	@($(RM) -r -f $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH))
	@(echo " meshtools were successfully cleaned")

$(MOBJS): $(LIBDEPS) $(OBJS) | $(OUTPUTPATH)
	$(CC) -o  $@ $@.o $(LIBDEPS) $(EXECFLAGS) $(DIR_LIBS) $(LOC_LIBS) $(SYS_LIBS)

$(OBJS):  | $(OUTPUTPATH)

$(OUTPUTPATH):
	@(mkdir -p $(OUTPUTPATH))

$(LIBDEPS): mechprep;



####################################################################
#  List of targets with dependent modules
#
mechprep:
	+@(cd ../../MEFEL/PREP; make $(MAKECMDGOALS))



####################################################################
#  Dependencies generated by compilers
#
-include $(DEPS)



####################################################################
#  Suffix rules
#
$(OUTPUTPATH)%.o : %.cpp
	@export CPATH=$(INCLUDES); \
	echo $(CC) $(CFLAGS) $(DEFS) -c $(<D)/$(<F); \
	$(CC) $(CFLAGS) $(COMPATFLAGS) $(DEFS) -c $(<D)/$(<F) -o $(@D)/$(@F)
