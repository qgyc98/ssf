####################################################################
#
#  Makefile for preprocessing part of SIFEL
#
####################################################################



################################################################### 
#  Include default part of Makefile - 
#  compiler definitions, flags, libraries ...
#
include ../../Makefile.in



################################################################### 
#  List of include directories
#
INCLUDES        =../../GEFEL/:../../GEFEL/PARSER/:../../GEFEL/OPTIM:../../GEFEL/RANDY



################################################################### 
#  List of local libraries
#
LOC_LIBS  = -lgef



###################################################################
#  List of source files
#
#SRCS =  gensifhex.cpp gensifhexq.cpp gensifquad.cpp gensifquadq.cpp gensifquadq-gid.cpp gensifquadq-new.cpp gensifquadc.cpp gensiftetras.cpp gensiftria.cpp soilplate.cpp gen1d.cpp
SRCS =  gensifhex.cpp gensifhexq.cpp gensifquad.cpp gensifquadq.cpp gensifquadq-new.cpp gensifquadc.cpp gensiftetras.cpp gensiftria.cpp soilplate.cpp gen1d.cpp 
SRCS += geniface.cpp genifcelem.cpp



###################################################################
#  List of object files
#
OBJS         := $(SRCS:%.cpp=$(OUTPUTPATH)%.o)



################################################################### 
#  List of executables
#
MOBJS        := $(SRCS:%.cpp=$(OUTPUTPATH)%)



################################################################### 
#  List of source dependency files
#
DEPS         = $(SRCS:%.cpp=$(OUTPUTPATH)%.d)



###################################################################
#  List of lib files
#

# libraries which preprocessors depends on
LIBDEPS  := $(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)libgef.a

# path to directories with needed libraries for the preprocessors target
DIR_LIBS = -L$(SIFEL_ROOT)$(BIN_ROOT)GEFEL/$(OUTPUTDIR)



####################################################################
#  Targets
#
.PHONY : generators

all:    gefel generators

generators: $(LIBDEPS) $(OBJS) $(MOBJS)
	@(echo "##### Preprocessors were successfully created")


$(OBJS):  | $(OUTPUTPATH)

$(MOBJS): $(LIBDEPS) $(OBJS) | $(OUTPUTPATH)
	$(CC) -o $@ $@.o $(EXECFLAGS) $(DIR_LIBS) $(LOC_LIBS) $(SYS_LIBS)

$(OUTPUTPATH):
	@(mkdir -p $(OUTPUTPATH))

$(LIBDEPS): gefel


clean:
	@($(RM) $(OBJS) $(MOBJS) $(DEPS) *~ core)
	@(echo " Preprocessors were successfully cleaned")

cleanall: $(LIBDEPS)
	@($(RM) -r -f $(addprefix $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH),$(REMOVEDIR)))
	@(echo " Preprocessors were successfully cleaned")

cleandepall: $(LIBDEPS)
	@($(RM) -r -f $(SIFEL_ROOT)$(BIN_ROOT)$(MODULE_PATH))
	@(echo " Preprocessors were successfully cleaned")



####################################################################
#  List of targets with dependent modules
#
gefel:
	+@(cd ../../GEFEL; make $(MAKECMDGOALS))



####################################################################
#  Dependencies generated by compilers
#
-include $(DEPS)



####################################################################
#  Suffix rules
#
$(OUTPUTPATH)%.o : %.cpp
	@export CPATH=$(INCLUDES); \
	echo $(CC) $(CFLAGS) -c $(<D)/$(<F); \
	$(CC) $(CFLAGS) $(COMPATFLAGS) $(DEFS) -c $(<D)/$(<F) -o $(@D)/$(@F)
